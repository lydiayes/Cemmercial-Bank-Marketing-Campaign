
bankfull <- read.csv2("bank-full.csv",stringsAsFactors = F)

names(bankfull)

summary(bankfull)

library(outliers)
outlier(as.numeric(bankfull$balance)) opposite = FALSE, logical = FALSE

which(is.na(bankfull))
#删除含有缺失值的行
bankfull=na.omit(bankfull)

bankfull<-bankfull[!duplicated(bankfull),]
#将处理后的数据保存
write.csv(bankfull,'bankfull.csv')


#提取数据的第一列（年龄），第五列（是否信用违约）;将数据按照年龄升序排序
newbankdata <- bankfull[,c(1,5)]
newbankdata=newbankdata[order(newbankdata$age),]#默认升序
write.csv(newbankdata,'newbankdata.csv')
#统计违约人数
weiyuenum<-data.frame(table(newbankdata[,2]))
write.csv(weiyuenum,'weiyuenum.csv')
#将其中违约的提取出来
weiyue <- subset(newbankdata,newbankdata$default == "yes")
write.csv(weiyue,'weiyue.csv')
#age<=12的为小孩；12<age<=30的为青年；30<age<=60的为中年;age>60的为老年
a<-cut(weiyue$age,breaks=c(-Inf,12,30,60,Inf),
       labels = c("小孩","青年","中年","老年"))
weiyue<-cbind(weiyue,a)
write.csv(weiyue,'weiyue.csv')
#统计违约的人中"青年","中年","老年"的人数及比例
weiyuenum2<-data.frame(table(weiyue[,3]))
#算出占比
weiyuenum2$percent <- weiyuenum2$Freq/sum(weiyuenum2$Freq)
write.csv(weiyuenum2,'weiyuenum.csv')
#绘制饼图
library('vcd')
names <- paste(weiyuenum2$Var1,weiyuenum2$percent,sep="---")
#饼图
pie(weiyuenum2$Freq,labels=names,col= rainbow(10),main="不同年龄段中违约数量统计")
#可以看出中年违约人数最多，信用危机越大，即信用不好。
#将完整数据中的违约的人提取出来
weiyuefull <- subset(bankfull,bankfull$default == "yes")
write.csv(weiyuefull,'weiyuefull.csv')


#在全部数据中将是否认购定期存款为yes的提取出来
yyes <- subset(bankfull,bankfull$y == "yes")
write.csv(yues,'yyes.csv')
#提取数据的第三列（婚姻），第十七列（是否认购定期存款）;
maritalisyyes <- yyes[,c(3,17)]
write.csv(maritalisyyes,'maritalisyyes.csv')
#统计人数及比例
maritalisyyesnum<-data.frame(table(maritalisyyes[,1]))
#算出占比
maritalisyyesnum$percent <- maritalisyyesnum$Freq/sum(maritalisyyesnum$Freq)
write.csv(maritalisyyesnum,'maritalisyyesnum.csv')
#绘制饼图
library('vcd')
names <- paste(maritalisyyesnum$Var1,maritalisyyesnum$percent,sep="---")
#饼图
pie(maritalisyyesnum$Freq,labels=names,col= rainbow(10),main="不同婚姻状态中认购定期存款数量统计")
#可以看出已婚的人去认购定期存款的几率大


#在全部数据中将是否认购定期存款为yes的提取出来
yyes <- subset(bankfull,bankfull$y == "yes")
write.csv(yyes,'yyes.csv')
#提取数据的第四列（教育），第十七列（是否认购定期存款）;
educationisyyes <- yyes[,c(4,17)]
write.csv(educationisyyes,'educationisyyes.csv')
#统计人数及比例
educationisyyesnum<-data.frame(table(educationisyyes[,1]))

educationisyyesnum$percent <- educationisyyesnum$Freq/sum(educationisyyesnum$Freq)
write.csv(educationisyyesnum,'educationisyyesnum.csv')

library('vcd')
names <- paste(educationisyyesnum$Var1,educationisyyesnum$percent,sep="---")

pie(educationisyyesnum$Freq,labels=names,col= rainbow(10),main="不同受教育程度中认购定期存款数量统计")




bankfull <- read.csv2("bank-full.csv",stringsAsFactors = F)
names(bankfull)
summary(bankfull)
library(outliers)
outlier(as.numeric(bankfull$balance))# opposite = FALSE, logical = FALSE
which(is.na(bankfull))
bankfull=na.omit(bankfull)
bankfull<-bankfull[!duplicated(bankfull),]
write.csv(bankfull,'bankfull.csv')

newbank <- read.csv2("bank-full.csv",stringsAsFactors = F)
bankdata<-summary(newbank)
set.seed(1)
sub<-sample(1:nrow(newbank),round(nrow(newbank)*2/3))
length(sub)#30141
data_train<-newbank[sub,]
data_test<-newbank[-sub,]
dim(data_train)
dim(data_test)
table(data_train$y)
table(data_test$y)


library(sampling)
library(party)
library(rpart)
library(rpart.plot)
library(rattle)

bank_tree<-rpart(as.factor(y)~ .,data=data_train,method='class',minsplit=20,minbucket=150,cp=0.00017)
summary(bank_tree)
print(bank_tree)

rpart.plot(bank_tree)


test_pre = predict(bank_tree,newdata = data_test)
test_pre <-data.frame(test_pre)

b<-cut(test_pre$no,breaks=c(-Inf,0.5,Inf),
       labels = c("yes","no"))
test_pre<-cbind(test_pre,b)
write.csv(test_pre,'test_pre.csv')

ac <- table(test_pre[,3],data_test$y)  

acc<-(ac[1,2]+ac[2,1])/(ac[1,1]+ac[1,2]+ac[2,1]+ac[2,2])
acc #0.9019244

asRules(bank_tree)

cp=bank_tree$cptable[which.min(bank_tree$cptable[,"xerror"]),"CP"]
cp #0.004106485
bank_tree2<-prune(bank_tree,cp=bank_tree$cptable[which.min(bank_tree$cptable[,"xerror"]),"CP"])

rpart.plot(bank_tree2)

test_pre2 = predict(bank_tree2,newdata = data_test)
test_pre2 <-data.frame(test_pre2)

c<-cut(test_pre2$no,breaks=c(-Inf,0.5,Inf),
       labels = c("yes","no"))
test_pre2<-cbind(test_pre2,c)
write.csv(test_pre2,'test_pre2.csv')

ac2<-table(test_pre2[,3],data_test$y)  

acc2<-(ac2[1,2]+ac2[2,1])/(ac2[1,1]+ac2[1,2]+ac2[2,1]+ac2[2,2])
acc2 #0.9021234

asRules(bank_tree2)
